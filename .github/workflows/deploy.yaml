name: DEPLOY

on:
  push:
    branches: 
      - main

jobs:
  deploy:
    name: deploy
    environment:
      name: main
    runs-on: ubuntu-latest
    env:
      CDK_DEFAULT_REGION: ${{ vars.REGION }}
      AWS_DEPLOY_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}      
      ROLE_ARN: ${{ vars.ROLE_ARN }}
    permissions:
      contents: read
      pull-requests: write
      id-token: write
      checks: write
      actions: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: build lambda-bitcoin-stack
        run: |
          cd src/LambdaBitcoin
          npm install
          npm run build
        env:
          PFG_ARTIFACTORY_USERNAME: ${{ secrets.PFG_ARTIFACTORY_USERNAME }}
          PFG_ARTIFACTORY_NPM_AUTH: ${{ secrets.PFG_ARTIFACTORY_NPM_AUTH }}

      - name: zip lambda-bitcoin-stack
        run: |
          cd src/LambdaBitcoin
          zip -r ../../LambdaBitcoin.zip .    

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: install dependencies
        run: |
          sudo npm install -g aws-cdk

      - name: configure aws account and prepare deploy
        run: |
          cd deploy && npm install
        env:
          PFG_ARTIFACTORY_USERNAME: ${{ secrets.PFG_ARTIFACTORY_USERNAME }}
          PFG_ARTIFACTORY_NPM_AUTH: ${{ secrets.PFG_ARTIFACTORY_NPM_AUTH}}

      - name: cdk synth
        run: |
          cd deploy
          cdk synth

      - name: deploy lambda stack
        run: cd deploy && cdk deploy --require-approval never LambdaBitcoinStack --outputs-file output.json